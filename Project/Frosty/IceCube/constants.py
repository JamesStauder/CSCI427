import pyqtgraph as pg
from dolfin import Constant

map = {'x0':0, 'y0':0,  'x1':10018, 'y1':17946,
       'cmap_x0':0, 'cmap_y0':0,
       'cmap_x1':10018, 'cmap_y1':17946,
       'proj_x0':-637925, 'proj_x1':864625,
       'proj_y0':-657675, 'proj_y1':-3349425,
       'cmap_proj_x0': -637925, 'cmap_proj_x1': 864625,
       'cmap_proj_y0': -657675, 'cmap_proj_y1': -3349425}

colormaps = {'velocity': True,
             'bed': False,
             'smb': False,
             'surface': False,
             'thickness': False,
             't2m': False
             }

keysPress = {'shift': False,
             'ctrl':  False,
             'alt':   False
             }

globalConstants = {'isPathIntLine': False,
                   'moveLine': False
                   }



render = True

skinnyBlackPlotPen = pg.mkPen(color=(0, 0, 0), width=1)
whitePlotPen  = pg.mkPen(color=(255, 255, 255), width=2)
blackPlotPen  = pg.mkPen(color=(  0,   0,   0), width=2)
greyPlotPen   = pg.mkPen(color=(200, 200, 200), width=2)
redPlotPen    = pg.mkPen(color=(100,   0,   0), width=2)
bluePlotPen   = pg.mkPen(color=(  0,   0, 255), width=2)
greenPlotPen  = pg.mkPen(color=( 76, 153,   0), width=2)
purplePlotPen = pg.mkPen(color=(102,   0, 204), width=2)
orangePlotPen = pg.mkPen(color=(255, 128,   0), width=2)
bluePlotPen   = pg.mkPen(color=(  0,   0, 255), width=2)
tealPlotPen   = pg.mkPen(color=(  0, 204, 204), width=2)
pinkPlotPen   = pg.mkPen(color=(153,   0, 153), width=2)

spatialRes = 1 # multiplied by 150 meters

dataFileName = './data/GreenlandInBedCoord.h5'
cmFileName = './data/dataCMValues.h5'


dt_float = 5.0 #Time step
thklim = 10.0
eps_reg = 1e-5 #Regularization parameter
dt = Constant(dt_float)
theta = Constant(0.5) #Crank-Nicholson parameter

a = [[0,38,115],
[0,38,115],
[0,41,117],
[0,41,117],
[0,43,122],
[0,43,122],
[0,45,128],
[0,45,128],
[0,46,130],
[0,46,130],
[0,47,135],
[0,47,135],
[0,51,140],
[0,51,140],
[0,53,145],
[0,53,145],
[0,54,148],
[0,54,148],
[0,56,153],
[0,56,153],
[0,58,158],
[0,58,158],
[0,63,163],
[0,63,163],
[0,65,168],
[0,65,168],
[0,65,171],
[0,65,171],
[0,67,176],
[0,67,176],
[0,69,181],
[0,69,181],
[0,74,186],
[0,74,186],
[0,77,191],
[0,77,191],
[0,78,194],
[0,78,194],
[0,80,199],
[0,80,199],
[0,82,204],
[0,82,204],
[0,87,209],
[0,87,209],
[0,88,212],
[0,88,212],
[0,90,217],
[0,90,217],
[0,92,222],
[0,92,222],
[0,95,227],
[0,95,227],
[0,101,232],
[0,101,232],
[0,102,235],
[0,102,235],
[0,104,240],
[0,104,240],
[0,106,245],
[0,106,245],
[0,108,250],
[0,108,250],
[0,111,255],
[0,111,255],
[5,118,255],
[5,118,255],
[10,120,255],
[10,120,255],
[18,129,255],
[18,129,255],
[25,133,255],
[25,133,255],
[31,135,255],
[31,135,255],
[36,142,255],
[36,142,255],
[41,144,255],
[41,144,255],
[48,152,255],
[48,152,255],
[56,156,255],
[56,156,255],
[61,161,255],
[61,161,255],
[66,164,255],
[66,164,255],
[74,167,255],
[74,167,255],
[82,174,255],
[82,174,255],
[87,176,255],
[87,176,255],
[92,182,255],
[92,182,255],
[97,184,255],
[97,184,255],
[105,190,255],
[105,190,255],
[112,193,255],
[112,193,255],
[117,195,255],
[117,195,255],
[122,200,255],
[122,200,255],
[128,202,255],
[128,202,255],
[138,208,255],
[138,208,255],
[143,210,255],
[143,210,255],
[148,212,255],
[148,212,255],
[153,216,255],
[153,216,255],
[161,219,255],
[161,219,255],
[168,223,255],
[168,223,255],
[173,225,255],
[173,225,255],
[179,228,255],
[179,228,255],
[184,230,255],
[184,230,255],
[191,233,255],
[191,233,255]]
